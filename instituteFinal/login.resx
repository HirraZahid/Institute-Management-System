<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ADJ//9k=
</value>
  </data>
</root>